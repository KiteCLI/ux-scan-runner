name: UX Scan (Public Runner)

on:
  workflow_dispatch:
    inputs:
      url:
        description: 'URL to scan'
        required: true
        type: string
      scanType:
        description: 'Type of scan to perform'
        required: false
        default: 'full'
        type: string
      scanId:
        description: 'Unique scan ID'
        required: true
        type: string
      privateRepo:
        description: 'owner/repo of the private repository to scan (e.g. your-org/your-private-repo)'
        required: true
        type: string
      userQuery:
        description: 'User query for the scan'
        required: false
        default: 'Comprehensive UX analysis'
        type: string
      enableAI:
        description: 'Whether AI analysis is enabled for this user'
        required: false
        default: 'true'
        type: string
  repository_dispatch:
    types: [run-ux-scan]

permissions:
  contents: read
  actions: read

jobs:
  ux-scan:
    runs-on: ubuntu-latest
    environment: production
    timeout-minutes: 15

    steps:
    - name: Checkout private repository
      uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.privateRepo || github.event.client_payload.privateRepo }}
        token: ${{ secrets.PRIVATE_REPO_PAT }}
        fetch-depth: 1

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright browsers
      run: npx playwright install chromium

    - name: Validate AI access
      run: |
        # Get inputs from either workflow_dispatch or repository_dispatch
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          ENABLE_AI="${{ github.event.inputs.enableAI }}"
          USER_QUERY="${{ github.event.inputs.userQuery }}"
        else
          ENABLE_AI="${{ github.event.client_payload.enableAI }}"
          USER_QUERY="${{ github.event.client_payload.userQuery }}"
        fi

        # Validate AI access
        if [ "$ENABLE_AI" = "false" ] || [ "$ENABLE_AI" = "0" ]; then
          echo "AI analysis disabled for this user"
          echo "DISABLE_AI=true" >> $GITHUB_ENV
        else
          echo "AI analysis enabled for this user"
          echo "DISABLE_AI=false" >> $GITHUB_ENV
        fi

        # Set user query
        echo "USER_QUERY=$USER_QUERY" >> $GITHUB_ENV

    - name: Run UX scan
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        PERPLEXITY_API_KEY: ${{ secrets.PERPLEXITY_API_KEY }}
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        DISABLE_AI: ${{ env.DISABLE_AI }}
        USER_QUERY: ${{ env.USER_QUERY }}
      run: |
        # Get inputs from either workflow_dispatch or repository_dispatch
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          URL="${{ github.event.inputs.url }}"
          SCAN_TYPE="${{ github.event.inputs.scanType }}"
          SCAN_ID="${{ github.event.inputs.scanId }}"
        else
          URL="${{ github.event.client_payload.url }}"
          SCAN_TYPE="${{ github.event.client_payload.scanType }}"
          SCAN_ID="${{ github.event.client_payload.scanId }}"
        fi

        echo "Starting UX scan for URL: $URL"
        echo "Scan type: $SCAN_TYPE"
        echo "Scan ID: $SCAN_ID"
        echo "User query: $USER_QUERY"
        echo "AI enabled: $([ "$DISABLE_AI" = "true" ] && echo "No" || echo "Yes")"

        # Run the Enhanced UX scan script with proper parameters
        tsx scripts/enhanced-scan-runner.ts \
          --url="$URL" \
          --scan-type="$SCAN_TYPE" \
          --scan-id="$SCAN_ID" \
          --user-query="$USER_QUERY" \
          --disable-ai="$DISABLE_AI"

    - name: Upload scan results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: scan-results-${{ github.event.inputs.scanId || github.event.client_payload.scanId }}
        path: |
          scan-results-*.json
          screenshots/
        retention-days: 7

    - name: Notify completion
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          SCAN_ID="${{ github.event.inputs.scanId }}"
          URL="${{ github.event.inputs.url }}"
        else
          SCAN_ID="${{ github.event.client_payload.scanId }}"
          URL="${{ github.event.client_payload.url }}"
        fi

        echo "UX scan completed for $URL"
        echo "Scan ID: $SCAN_ID"
        echo "Results uploaded as artifact"
        echo "AI analysis: $([ "$DISABLE_AI" = "true" ] && echo "Disabled" || echo "Enabled")"
